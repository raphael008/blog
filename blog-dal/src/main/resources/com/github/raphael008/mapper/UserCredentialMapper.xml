<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.raphael008.mapper.UserCredentialMapper">
    <resultMap id="BaseResultMap" type="com.github.raphael008.model.UserCredential">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="credential_id" jdbcType="BIGINT" property="credentialId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        credential_id, user_id, user_password
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from bd_user_credential
        where credential_id = #{credentialId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from bd_user_credential
        where credential_id = #{credentialId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="credential_id" keyProperty="credentialId"
            parameterType="com.github.raphael008.model.UserCredential" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into bd_user_credential (user_id, user_password)
        values (#{userId,jdbcType=BIGINT}, #{userPassword,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="credential_id" keyProperty="credentialId"
            parameterType="com.github.raphael008.model.UserCredential" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into bd_user_credential
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.raphael008.model.UserCredential">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update bd_user_credential
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
        </set>
        where credential_id = #{credentialId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.raphael008.model.UserCredential">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update bd_user_credential
        set user_id = #{userId,jdbcType=BIGINT},
        user_password = #{userPassword,jdbcType=VARCHAR}
        where credential_id = #{credentialId,jdbcType=BIGINT}
    </update>

    <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from bd_user_credential
        where user_id = #{userId}
        and deleted = 0
    </select>
</mapper>